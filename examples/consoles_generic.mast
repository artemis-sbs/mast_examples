import examples\bar.mast

started = False


if IS_SERVER:
    => map
    ->server_page
else:
    event change_console:
        ->select_console
    end_event
    ->select_console
end_if


============== server_page =======================
""" This is the example script"""

await choice:
    + "Start Mission" if started==False:
    ~~ sbs.resume_sim()~~
    + "Resume Mission" if started==True:
        ~~ sbs.resume_sim() ~~
end_await
->server_page

========= map ================
~~sbs.create_new_sim()~~
# First present gui has a sim of None
# need to wait for the next present
delay gui  1s

shared player = PlayerShip().spawn(sim, 0, 0, 0,"Artemis", "tsn", "Battle Cruiser").py_object
shared hera = PlayerShip().spawn(sim, 0, 0, 0,"Hera", "tsn", "Battle Cruiser").py_object
shared atlas = PlayerShip().spawn(sim, 0, 0, 0,"Atlas", "tsn", "Battle Cruiser").py_object
~~sbs.assign_client_to_ship(0, player.id)~~
shared tsn =  ~~ [
    Npc().spawn(sim, 1000, 0, 1000, "TSN0", "tsn", "Battle Cruiser", "behav_npcship").py_object,
    Npc().spawn(sim ,1200, 0, 1000, "TSN1", "tsn", "Battle Cruiser", "behav_npcship").py_object,
    Npc().spawn(sim, 1400, 0, 1000, "TSN2", "tsn", "Battle Cruiser", "behav_npcship").py_object
    ]~~

->END


========== select_console ==========

style area: 60,50, 75,90;

~~
ship_list = ""
players = SpaceObject.get_objects_with_role("PlayerShip")
player_names = {}
first = None
for player in players:
    first = player.name(sim) if first is None else first
    player_names[player.name(sim)] = player

ship_list = ",".join(player_names.keys() )

export_var("ship_list", ship_list)
export_var("player_names", player_names)
export_var("ship", first)

~~~

vradio ship "{ship_list}"

section
style area: 85,50, 99,90;
console = "helm"
vradio console "helm,weapons, comms,science,engineering"
blank
row
button "accept":
    ->console_selected
end_button

await gui

->END

====== console_selected ====

player_selected=player_names[ship]
~~
sbs.assign_client_to_ship(client_id, player_selected.id)
~~


match console:
    case "helm":
        widget_list "normal_helm" "3dview^2dview^helm_movement^throttle^request_dock^shield_control^ship_data^text_waterfall^main_screen_control"
    case "weapons":
        widget_list "normal_weap" "2dview^weapon_control^ship_data^shield_control^text_waterfall^main_screen_control"
    case "science":
        widget_list "normal_sci" "science_2d_view^ship_data^text_waterfall^science_data^object_sorted_list"
    case "engineering":
        widget_list "normal_engi" "ship_internal_view^grid_object_list^text_waterfall^eng_heat_controls^eng_power_controls^ship_data"
    case "comms":
        widget_list "normal_comm" "text_waterfall^comms_waterfall^comms_control^comms_face^object_sorted_list^ship_data"
    case "mainscreen":
        widget_list "normal_main" "3dview^ship_data^text_waterfall"
    case _:
        """Pick a Console"""
end_match

await gui

